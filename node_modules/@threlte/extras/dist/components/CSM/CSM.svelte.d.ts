import { SvelteComponent } from "svelte";
import type { Camera, ColorRepresentation, Vector3Tuple } from 'three';
import type { CSMParameters } from 'three/examples/jsm/csm/CSM.js';
import { CSM } from 'three/examples/jsm/csm/CSM.js';
declare const __propDef: {
    props: {
        /**
           * Whether or not CSM is enabled. If `enabled={false}`, a slot named
           * `"disabled"` will be rendered.
           */ enabled?: boolean | undefined;
        /**
           * The arguments to pass to the CSM constructor.
           */ args?: Partial<CSMParameters> | undefined;
        /**
           * The camera to use for CSM. Defaults to the camera set by `makeDefault`.
           */ camera?: Camera | undefined;
        /**
           * A configuration callback, which is triggered when CSM is activated. This
           * callback facilitates advanced configurations, such as enabling the fade
           * feature.
           */ configure?: ((csm: CSM) => void) | undefined;
        lightIntensity?: number | undefined;
        lightColor?: ColorRepresentation | undefined;
        lightDirection?: Vector3Tuple | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
        disabled: {};
    };
};
export type CsmProps = typeof __propDef.props;
export type CsmEvents = typeof __propDef.events;
export type CsmSlots = typeof __propDef.slots;
export default class Csm extends SvelteComponent<CsmProps, CsmEvents, CsmSlots> {
}
export {};
