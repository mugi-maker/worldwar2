/// <reference types="webxr" />
import type { WebXRManager, Intersection } from 'three';
export declare const isPresenting: import("@threlte/core").CurrentWritable<boolean>;
export declare const isHandTracking: import("@threlte/core").CurrentWritable<boolean>;
export declare const session: import("@threlte/core").CurrentWritable<XRSession | undefined>;
export declare const referenceSpaceType: import("@threlte/core").CurrentWritable<XRReferenceSpaceType | undefined>;
export declare const xr: import("@threlte/core").CurrentWritable<WebXRManager | undefined>;
export declare const controllerDispatchers: {
    left: import("@threlte/core").CurrentWritable<((<Type extends string>(type: Type, payload?: unknown) => void) & {
        hasEventListener: <Type_1 extends string>(type: Type_1) => boolean;
    }) | undefined>;
    right: import("@threlte/core").CurrentWritable<((<Type extends string>(type: Type, payload?: unknown) => void) & {
        hasEventListener: <Type_1 extends string>(type: Type_1) => boolean;
    }) | undefined>;
};
export declare const handDispatchers: {
    left: import("@threlte/core").CurrentWritable<((<Type extends string>(type: Type, payload?: unknown) => void) & {
        hasEventListener: <Type_1 extends string>(type: Type_1) => boolean;
    }) | undefined>;
    right: import("@threlte/core").CurrentWritable<((<Type extends string>(type: Type, payload?: unknown) => void) & {
        hasEventListener: <Type_1 extends string>(type: Type_1) => boolean;
    }) | undefined>;
};
export declare const teleportState: import("@threlte/core").CurrentWritable<{
    left: {
        enabled: boolean;
        hovering: boolean;
    };
    right: {
        enabled: boolean;
        hovering: boolean;
    };
}>;
export declare const teleportIntersection: {
    left: import("@threlte/core").CurrentWritable<Intersection<import("three").Object3D<import("three").Object3DEventMap>> | undefined>;
    right: import("@threlte/core").CurrentWritable<Intersection<import("three").Object3D<import("three").Object3DEventMap>> | undefined>;
};
export declare const pointerState: import("@threlte/core").CurrentWritable<{
    left: {
        enabled: boolean;
        hovering: boolean;
    };
    right: {
        enabled: boolean;
        hovering: boolean;
    };
}>;
export declare const pointerIntersection: {
    left: import("@threlte/core").CurrentWritable<Intersection<import("three").Object3D<import("three").Object3DEventMap>> | undefined>;
    right: import("@threlte/core").CurrentWritable<Intersection<import("three").Object3D<import("three").Object3DEventMap>> | undefined>;
};
