/// <reference types="webxr" />
import { SvelteComponent } from "svelte";
declare const __propDef: {
    props: Omit<import("svelte/elements").HTMLButtonAttributes & {
        mode: XRSessionMode;
        sessionInit?: (XRSessionInit & {
            domOverlay?: {
                root: HTMLElement;
            } | undefined;
        }) | undefined;
        force?: "enter" | "exit" | undefined;
        styled?: boolean | undefined;
    }, "mode" | "sessionInit"> & {
        sessionInit?: (XRSessionInit & {
            domOverlay?: {
                root: HTMLElement;
            } | undefined;
        }) | undefined;
    };
    events: {
        click: CustomEvent<{
            state: "blocked" | "unsupported" | "insecure" | "supported";
            nativeEvent: MouseEvent;
        }>;
        error: CustomEvent<Error>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type ArButtonProps = typeof __propDef.props;
export type ArButtonEvents = typeof __propDef.events;
export type ArButtonSlots = typeof __propDef.slots;
/**
 * `<ARButton />` is an HTML `<button />` that can be used to init and display info about your immersive AR session.
 *
 * ```svelte
 * <ARButton
 *   on:error={(event) => {}}
 *   on:click={(event) => {}}
 * />
 * ```
 */
export default class ArButton extends SvelteComponent<ArButtonProps, ArButtonEvents, ArButtonSlots> {
}
export {};
