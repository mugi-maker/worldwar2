import{ClassName as e,createPlugin as t,parseRecord as i}from"@tweakpane/core";function a(e){const t=new Image;return t.crossOrigin="anonymous",t.src=e,t}const n=e("img");class s{constructor(e,t){this.element=e.createElement("div"),this.element.classList.add(n()),t.viewProps.bindClassModifiers(this.element),this.input=e.createElement("input"),this.input.classList.add(n("input")),this.input.setAttribute("type","file"),this.input.setAttribute("accept",t.extensions.join(",")),this.image_=e.createElement("img"),this.image_.id="tpimg_"+Math.random().toString(36).slice(2),this.image_.classList.add(n("image")),this.image_.classList.add(n(`image_${t.imageFit}`)),this.image_.crossOrigin="anonymous",this.image_.onclick=e=>{t.clickCallback?t.clickCallback(e,this.input):this.input.click()},this.element.classList.add(n("area_root")),this.element.appendChild(this.image_),this.element.appendChild(this.input)}changeImage(e){this.image_.src=e}changeDraggingState(e){const t=this.element;e?null==t||t.classList.add(n("area_dragging")):null==t||t.classList.remove(n("area_dragging"))}}let r=null;class o{constructor(e,t){this.value=t.value,this.viewProps=t.viewProps,this.view=new s(e,{viewProps:this.viewProps,extensions:t.extensions,imageFit:t.imageFit,clickCallback:t.clickCallback}),this.onFile=this.onFile.bind(this),this.onDrop=this.onDrop.bind(this),this.onDragStart=this.onDragStart.bind(this),this.onDragOver=this.onDragOver.bind(this),this.onDragLeave=this.onDragLeave.bind(this),this.view.input.addEventListener("change",this.onFile),this.view.element.addEventListener("drop",this.onDrop),this.view.element.addEventListener("dragstart",this.onDragStart),this.view.element.addEventListener("dragover",this.onDragOver),this.view.element.addEventListener("dragleave",this.onDragLeave),this.viewProps.handleDispose((()=>{this.view.input.removeEventListener("change",this.onFile),this.view.element.removeEventListener("drop",this.onDrop),this.view.element.removeEventListener("dragstart",this.onDragStart),this.view.element.removeEventListener("dragover",this.onDragOver),this.view.element.removeEventListener("dragleave",this.onDragLeave)})),this.value.emitter.on("change",(()=>this.handleValueChange())),this.handleValueChange()}onFile(e){const t=(null==e?void 0:e.target).files;if(!t||!t.length)return;const i=t[0];this.setValue(i)}onDrop(e){e.preventDefault();try{const{dataTransfer:t}=e,i=null==t?void 0:t.files[0];if(i)this.setValue(i);else{const e=null==t?void 0:t.getData("img-id");if(e){const t=document.getElementById(e);this.setValue(t)}else{const e=null==t?void 0:t.getData("url");if(!e)throw new Error("No url");this.setValue(e)}}}catch(e){console.error("Could not parse the dropped image",e)}finally{this.view.changeDraggingState(!1)}}onDragStart(e){var t,i;null===(t=e.dataTransfer)||void 0===t||t.setData("img-id",this.view.image_.id),null===(i=e.dataTransfer)||void 0===i||i.setDragImage(this.view.image_,0,0)}onDragOver(e){e.preventDefault(),this.view.changeDraggingState(!0)}onDragLeave(){this.view.changeDraggingState(!1)}handleImage(e){e instanceof HTMLImageElement?this.updateImage(e.src):"string"!=typeof e&&e?this.setValue(e):("placeholder"!==e&&e||(e=this.handlePlaceholderImage().src),this.updateImage(e))}updateImage(e){this.view.changeImage(e)}setValue(e){if(e instanceof HTMLImageElement)this.value.setRawValue(e);else if(e instanceof File){const t=URL.createObjectURL(e)+"#"+e.name;e.src=t;const i=a(t);this.value.setRawValue(i||e)}else e?this.value.setRawValue(a(e)):this.value.setRawValue(this.handlePlaceholderImage())}handleValueChange(){this.handleImage(this.value.rawValue)}handlePlaceholderImage(){return r||(r=function(){const e=new Blob(['\n\t<svg width="320" height="50" xmlns="http://www.w3.org/2000/svg">\n  <style>\n    text {\n      font-family: "Menlo", monospace;\n      font-size: 12px;\n\t\t\tfill: gray;\n    }\n  </style>\n  <text x="50%" y="55%" text-anchor="middle">\n    No Image\n  </text>\n</svg>'],{type:"image/svg+xml"}),t=new Image;return t.src=URL.createObjectURL(e),t}()),r}}const l=[".jpg",".png",".gif"],g="input-image",c=".tp-imgv{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:rgba(0,0,0,0);border-width:0;font-family:inherit;font-size:inherit;font-weight:inherit;margin:0;outline:none;padding:0}.tp-imgv{background-color:var(--in-bg);border-radius:var(--bld-br);box-sizing:border-box;color:var(--in-fg);font-family:inherit;height:var(--cnt-usz);line-height:var(--cnt-usz);min-width:0;width:100%}.tp-imgv:hover{background-color:var(--in-bg-h)}.tp-imgv:focus{background-color:var(--in-bg-f)}.tp-imgv:active{background-color:var(--in-bg-a)}.tp-imgv:disabled{opacity:.5}:root{--tp-plugin-image-dragging-color: hsla(230, 100%, 66%, 1)}.tp-imgv{cursor:pointer;display:inline-flex;height:auto !important;max-height:calc(var(--cnt-usz)*3);border-radius:4px;position:relative}.tp-imgv.tp-v-disabled{opacity:.5}.tp-imgv_input{width:0;height:0;pointer-events:none;visibility:hidden}.tp-imgv_image{width:100%;height:-moz-max-content;height:max-content;max-height:calc(var(--cnt-usz)*3);border:0}.tp-imgv_image_contain{-o-object-fit:contain;object-fit:contain}.tp-imgv_image_cover{-o-object-fit:cover;object-fit:cover}.tp-imgv_area_root{transition:opacity .16s ease-in-out}.tp-imgv_area_dragging{border:2px dashed var(--tp-plugin-image-dragging-color);border-radius:4px;opacity:.6}",h=[t({id:"input-image",type:"input",accept(e,t){if(!(e instanceof HTMLImageElement||"string"==typeof e))return null;const a=i(t,(e=>({view:e.required.constant("input-image"),acceptUrl:e.optional.boolean,clickCallback:e.optional.function,imageFit:e.optional.custom((e=>"contain"===e||"cover"===e?e:void 0)),extensions:e.optional.array(e.required.string)})));return a?{initialValue:e,params:a}:null},binding:{reader:e=>e=>void 0!==e.src?""===e.src?"placeholder":e.src:e,writer:e=>(e,t)=>{e.write(t)}},controller(e){var t,i;return new o(e.document,{value:e.value,imageFit:null!==(t=e.params.imageFit)&&void 0!==t?t:"cover",clickCallback:e.params.clickCallback,viewProps:e.viewProps,extensions:null!==(i=e.params.extensions)&&void 0!==i?i:l})}})];export{c as css,g as id,h as plugins};
