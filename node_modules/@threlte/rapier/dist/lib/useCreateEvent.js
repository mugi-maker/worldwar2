import { onDestroy } from 'svelte';
import { createRawEventDispatcher } from '@threlte/core';
export const useCreateEvent = () => {
    const dispatchRaw = createRawEventDispatcher();
    const cleanupFunctions = [];
    let ref = undefined;
    const dispatchCreateEvent = () => {
        // call every cleanup function
        cleanupFunctions.forEach((cleanup) => cleanup());
        // clear the cleanup functions array
        cleanupFunctions.length = 0;
        const cleanup = (callback) => {
            // add cleanup function to array
            cleanupFunctions.push(callback);
        };
        if (ref === undefined)
            return;
        dispatchRaw('create', { ref, cleanup });
    };
    const updateRef = (newRef) => {
        ref = newRef;
        dispatchCreateEvent();
    };
    onDestroy(() => {
        // call every cleanup function
        cleanupFunctions.forEach((cleanup) => cleanup());
    });
    return {
        updateRef
    };
};
