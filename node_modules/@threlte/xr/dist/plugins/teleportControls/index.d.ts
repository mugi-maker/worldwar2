import { type ComputeFunction } from './context';
export interface TeleportControlsOptions {
    enabled?: boolean;
    /**
     * The compute function is responsible for updating the state of the pointerControls plugin.
     * It needs to set up the raycaster and the pointer vector. If no compute function is provided,
     * the plugin will use the default compute function.
     */
    compute?: ComputeFunction;
    /**
     * @default 1 / 30
     */
    fixedStep?: number;
}
export declare const teleportControls: (handedness: 'left' | 'right', options?: TeleportControlsOptions) => {
    enabled: import("@threlte/core").CurrentWritable<boolean>;
    hovered: import("@threlte/core").CurrentWritable<import("three").Intersection<import("three").Object3D<import("three").Object3DEventMap>> | undefined>;
    active: import("@threlte/core").CurrentWritable<boolean>;
};
