import { SvelteComponent } from 'svelte';
import { type Theme } from '../theme.js';
declare const __propDef: {
	props: {
		/**
		 * The theme to use when estimating the height of the pane.
		 */ theme?: Theme | undefined;
		/**
		 * Theme keys to add to the height estimate.
		 */ keysAdd?:
			| (keyof {
					baseBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					baseBorderRadius?: string | undefined;
					baseFontFamily?: string | undefined;
					baseShadowColor?: import('../theme.js').ThemeColorValue | undefined;
					bladeBorderRadius?: string | undefined;
					bladeHorizontalPadding?: string | undefined;
					bladeValueWidth?: string | undefined;
					buttonBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					buttonBackgroundColorActive?: import('../theme.js').ThemeColorValue | undefined;
					buttonBackgroundColorFocus?: import('../theme.js').ThemeColorValue | undefined;
					buttonBackgroundColorHover?: import('../theme.js').ThemeColorValue | undefined;
					buttonForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					containerBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					containerBackgroundColorActive?: import('../theme.js').ThemeColorValue | undefined;
					containerBackgroundColorFocus?: import('../theme.js').ThemeColorValue | undefined;
					containerBackgroundColorHover?: import('../theme.js').ThemeColorValue | undefined;
					containerForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					containerHorizontalPadding?: string | undefined;
					containerUnitSize?: string | undefined;
					containerUnitSpacing?: string | undefined;
					containerVerticalPadding?: string | undefined;
					grooveForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					inputBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					inputBackgroundColorActive?: import('../theme.js').ThemeColorValue | undefined;
					inputBackgroundColorFocus?: import('../theme.js').ThemeColorValue | undefined;
					inputBackgroundColorHover?: import('../theme.js').ThemeColorValue | undefined;
					inputForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					labelForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					monitorBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					monitorForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					pluginImageDraggingColor?: import('../theme.js').ThemeColorValue | undefined;
			  })[]
			| undefined;
		/**
		 * Theme keys to subtract from the height estimate.
		 */ keysSubtract?:
			| (keyof {
					baseBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					baseBorderRadius?: string | undefined;
					baseFontFamily?: string | undefined;
					baseShadowColor?: import('../theme.js').ThemeColorValue | undefined;
					bladeBorderRadius?: string | undefined;
					bladeHorizontalPadding?: string | undefined;
					bladeValueWidth?: string | undefined;
					buttonBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					buttonBackgroundColorActive?: import('../theme.js').ThemeColorValue | undefined;
					buttonBackgroundColorFocus?: import('../theme.js').ThemeColorValue | undefined;
					buttonBackgroundColorHover?: import('../theme.js').ThemeColorValue | undefined;
					buttonForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					containerBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					containerBackgroundColorActive?: import('../theme.js').ThemeColorValue | undefined;
					containerBackgroundColorFocus?: import('../theme.js').ThemeColorValue | undefined;
					containerBackgroundColorHover?: import('../theme.js').ThemeColorValue | undefined;
					containerForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					containerHorizontalPadding?: string | undefined;
					containerUnitSize?: string | undefined;
					containerUnitSpacing?: string | undefined;
					containerVerticalPadding?: string | undefined;
					grooveForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					inputBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					inputBackgroundColorActive?: import('../theme.js').ThemeColorValue | undefined;
					inputBackgroundColorFocus?: import('../theme.js').ThemeColorValue | undefined;
					inputBackgroundColorHover?: import('../theme.js').ThemeColorValue | undefined;
					inputForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					labelForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					monitorBackgroundColor?: import('../theme.js').ThemeColorValue | undefined;
					monitorForegroundColor?: import('../theme.js').ThemeColorValue | undefined;
					pluginImageDraggingColor?: import('../theme.js').ThemeColorValue | undefined;
			  })[]
			| undefined;
		/**
		 * Extra arbitrary space to add to the height estimate, in pixels.
		 */ extra?: number | undefined;
	};
	events: {
		[evt: string]: CustomEvent<any>;
	};
	slots: {};
	exports?: {} | undefined;
	bindings?: string | undefined;
};
export type ClsPadProps = typeof __propDef.props;
export type ClsPadEvents = typeof __propDef.events;
export type ClsPadSlots = typeof __propDef.slots;
/**
 * This component is for internal use only.
 *
 * It's a utility to assist in estimating the rendered height of Tweakpane components for use during prerendering in an attempt to minimize layout shift upon hydration.
 *
 * The associated SSR / prerendering CLS prevention feature is experimental.
 *
 * @sourceLink
 * [ClsPad.svelte](https://github.com/kitschpatrol/svelte-tweakpane-ui/blob/main/src/lib/internal/ClsPad.svelte)
 */
export default class ClsPad extends SvelteComponent<ClsPadProps, ClsPadEvents, ClsPadSlots> {}
export {};
