import { SvelteComponent } from "svelte";
import type { XRHandEvent } from '../types';
declare const __propDef: {
    props: {
        /** Whether the XRHand should be matched with the left hand. */
        left: true;
        right?: undefined;
        hand?: undefined;
    } | {
        /** Whether the XRHand should be matched with the right hand. */
        right: true;
        left?: undefined;
        hand?: undefined;
    } | {
        /** Whether the XRHand should be matched with the left or right hand. */
        hand: 'left' | 'right';
        left?: undefined;
        right?: undefined;
    };
    slots: {
        'target-ray': {};
        wrist: {};
        default: {};
    };
    events: {
        connected: XRHandEvent<'connected'>;
        disconnected: XRHandEvent<'disconnected'>;
        pinchstart: XRHandEvent<'pinchstart'>;
        pinchend: XRHandEvent<'pinchend'>;
    };
};
export type HandProps = typeof __propDef.props;
export type HandEvents = typeof __propDef.events;
export type HandSlots = typeof __propDef.slots;
export default class Hand extends SvelteComponent<HandProps, HandEvents, HandSlots> {
}
export {};
