"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListView = void 0;
var dom_util_1 = require("../dom-util");
var reactive_1 = require("../model/reactive");
var class_name_1 = require("./class-name");
var className = (0, class_name_1.ClassName)('lst');
/**
 * @hidden
 */
var ListView = /** @class */ (function () {
    function ListView(doc, config) {
        var _this = this;
        this.onValueChange_ = this.onValueChange_.bind(this);
        this.props_ = config.props;
        this.element = doc.createElement('div');
        this.element.classList.add(className());
        config.viewProps.bindClassModifiers(this.element);
        var selectElem = doc.createElement('select');
        selectElem.classList.add(className('s'));
        config.viewProps.bindDisabled(selectElem);
        this.element.appendChild(selectElem);
        this.selectElement = selectElem;
        var markElem = doc.createElement('div');
        markElem.classList.add(className('m'));
        markElem.appendChild((0, dom_util_1.createSvgIconElement)(doc, 'dropdown'));
        this.element.appendChild(markElem);
        config.value.emitter.on('change', this.onValueChange_);
        this.value_ = config.value;
        (0, reactive_1.bindValueMap)(this.props_, 'options', function (opts) {
            (0, dom_util_1.removeChildElements)(_this.selectElement);
            opts.forEach(function (item) {
                var optionElem = doc.createElement('option');
                optionElem.textContent = item.text;
                _this.selectElement.appendChild(optionElem);
            });
            _this.update_();
        });
    }
    ListView.prototype.update_ = function () {
        var values = this.props_.get('options').map(function (o) { return o.value; });
        this.selectElement.selectedIndex = values.indexOf(this.value_.rawValue);
    };
    ListView.prototype.onValueChange_ = function () {
        this.update_();
    };
    return ListView;
}());
exports.ListView = ListView;
