import { currentWritable, useThrelte } from '@threlte/core';
import { getContext, setContext } from 'svelte';
import { Vector2, Raycaster } from 'three';
import { getDefaultComputeFunction } from './defaults';
const contextKey = Symbol('interactivity-context');
export const getInteractivityContext = () => {
    return getContext(contextKey);
};
export const setInteractivityContext = (options) => {
    const target = currentWritable(options?.target ?? useThrelte().renderer.domElement);
    const context = {
        enabled: currentWritable(options?.enabled ?? true),
        pointer: currentWritable(new Vector2()),
        pointerOverTarget: currentWritable(false),
        lastEvent: undefined,
        raycaster: new Raycaster(),
        initialClick: [0, 0],
        initialHits: [],
        hovered: new Map(),
        interactiveObjects: [],
        target,
        compute: options?.compute ?? getDefaultComputeFunction(target),
        filter: options?.filter
    };
    setContext(contextKey, context);
    return context;
};
const handlerContextKey = Symbol('interactivity-handler-context');
export const getHandlerContext = () => {
    return getContext(handlerContextKey);
};
export const setHandlerContext = () => {
    setContext(handlerContextKey, {
        dispatchers: new WeakMap()
    });
};
